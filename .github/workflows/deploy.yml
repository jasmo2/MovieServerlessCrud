name: deploy-jaime-api

on:
  push:
    branches:
      - main  # Trigger for production
      - dev   # Trigger for development

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Cache Node.js modules
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Step 3: Setup Node.js environment
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    # Step 4: Install dependencies
    - name: Install dependencies
      run: npm install

    # Step 5: Install Serverless Framework
    - name: Install Serverless Framework
      run: npm install -g serverless@latest

    # Step 6: Deploy to AWS based on branch
    - name: Deploy to AWS
      run: |
        if [ "${{ github.ref_name }}" == "main" ]; then
          npx serverless deploy --stage prod
        elif [ "${{ github.ref_name }}" == "dev" ]; then
          npx serverless deploy --stage dev
        else
          echo "Branch not configured for deployment"
          exit 1
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}

    # Step 7: Rollback Deployment on Failure
    - name: Rollback Deployment
      if: failure()
      run: |
        if [ "${{ github.ref_name }}" == "main" ]; then
          npx serverless rollback --stage prod
        elif [ "${{ github.ref_name }}" == "dev" ]; then
          npx serverless rollback --stage dev
        else
          echo "Branch not configured for rollback"
          exit 1
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
